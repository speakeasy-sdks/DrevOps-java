/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetProjectWorkflowTestMetrics200ApplicationJSON - Project level test metrics response
 */
public class GetProjectWorkflowTestMetrics200ApplicationJSON {
    /**
     * The average number of tests executed per run
     */
    @JsonProperty("average_test_count")
    public Long averageTestCount;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withAverageTestCount(Long averageTestCount) {
        this.averageTestCount = averageTestCount;
        return this;
    }
    
    /**
     * Metrics for the most frequently failing tests
     */
    @JsonProperty("most_failed_tests")
    public GetProjectWorkflowTestMetrics200ApplicationJSONMostFailedTests[] mostFailedTests;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withMostFailedTests(GetProjectWorkflowTestMetrics200ApplicationJSONMostFailedTests[] mostFailedTests) {
        this.mostFailedTests = mostFailedTests;
        return this;
    }
    
    /**
     * The number of tests with the same success rate being omitted from most_failed_tests
     */
    @JsonProperty("most_failed_tests_extra")
    public Long mostFailedTestsExtra;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withMostFailedTestsExtra(Long mostFailedTestsExtra) {
        this.mostFailedTestsExtra = mostFailedTestsExtra;
        return this;
    }
    
    /**
     * Metrics for the slowest running tests
     */
    @JsonProperty("slowest_tests")
    public GetProjectWorkflowTestMetrics200ApplicationJSONSlowestTests[] slowestTests;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withSlowestTests(GetProjectWorkflowTestMetrics200ApplicationJSONSlowestTests[] slowestTests) {
        this.slowestTests = slowestTests;
        return this;
    }
    
    /**
     * The number of tests with the same duration rate being omitted from slowest_tests
     */
    @JsonProperty("slowest_tests_extra")
    public Long slowestTestsExtra;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withSlowestTestsExtra(Long slowestTestsExtra) {
        this.slowestTestsExtra = slowestTestsExtra;
        return this;
    }
    
    /**
     * Test counts grouped by pipeline number and workflow id
     */
    @JsonProperty("test_runs")
    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRuns[] testRuns;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withTestRuns(GetProjectWorkflowTestMetrics200ApplicationJSONTestRuns[] testRuns) {
        this.testRuns = testRuns;
        return this;
    }
    
    /**
     * The total number of test runs
     */
    @JsonProperty("total_test_runs")
    public Long totalTestRuns;

    public GetProjectWorkflowTestMetrics200ApplicationJSON withTotalTestRuns(Long totalTestRuns) {
        this.totalTestRuns = totalTestRuns;
        return this;
    }
    
    public GetProjectWorkflowTestMetrics200ApplicationJSON(@JsonProperty("average_test_count") Long averageTestCount, @JsonProperty("most_failed_tests") GetProjectWorkflowTestMetrics200ApplicationJSONMostFailedTests[] mostFailedTests, @JsonProperty("most_failed_tests_extra") Long mostFailedTestsExtra, @JsonProperty("slowest_tests") GetProjectWorkflowTestMetrics200ApplicationJSONSlowestTests[] slowestTests, @JsonProperty("slowest_tests_extra") Long slowestTestsExtra, @JsonProperty("test_runs") GetProjectWorkflowTestMetrics200ApplicationJSONTestRuns[] testRuns, @JsonProperty("total_test_runs") Long totalTestRuns) {
        this.averageTestCount = averageTestCount;
        this.mostFailedTests = mostFailedTests;
        this.mostFailedTestsExtra = mostFailedTestsExtra;
        this.slowestTests = slowestTests;
        this.slowestTestsExtra = slowestTestsExtra;
        this.testRuns = testRuns;
        this.totalTestRuns = totalTestRuns;
  }
}
