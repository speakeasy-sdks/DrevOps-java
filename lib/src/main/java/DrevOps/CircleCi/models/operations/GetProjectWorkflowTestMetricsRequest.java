/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import DrevOps.CircleCi.utils.SpeakeasyMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetProjectWorkflowTestMetricsRequest {
    /**
     * Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=all-branches")
    public Boolean allBranches;

    public GetProjectWorkflowTestMetricsRequest withAllBranches(Boolean allBranches) {
        this.allBranches = allBranches;
        return this;
    }
    
    /**
     * The name of a vcs branch. If not passed we will scope the API call to the default branch.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=branch")
    public String branch;

    public GetProjectWorkflowTestMetricsRequest withBranch(String branch) {
        this.branch = branch;
        return this;
    }
    
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=project-slug")
    public String projectSlug;

    public GetProjectWorkflowTestMetricsRequest withProjectSlug(String projectSlug) {
        this.projectSlug = projectSlug;
        return this;
    }
    
    /**
     * The name of the workflow.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workflow-name")
    public String workflowName;

    public GetProjectWorkflowTestMetricsRequest withWorkflowName(String workflowName) {
        this.workflowName = workflowName;
        return this;
    }
    
    public GetProjectWorkflowTestMetricsRequest(@JsonProperty("project-slug") String projectSlug, @JsonProperty("workflow-name") String workflowName) {
        this.projectSlug = projectSlug;
        this.workflowName = workflowName;
  }
}
