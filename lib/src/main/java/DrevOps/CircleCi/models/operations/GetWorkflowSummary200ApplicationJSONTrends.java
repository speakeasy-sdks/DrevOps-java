/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetWorkflowSummary200ApplicationJSONTrends - Trends for aggregated metrics across a workflow for a given time window.
 */
public class GetWorkflowSummary200ApplicationJSONTrends {
    /**
     * The trend value for number of failed runs.
     */
    @JsonProperty("failed_runs")
    public Float failedRuns;

    public GetWorkflowSummary200ApplicationJSONTrends withFailedRuns(Float failedRuns) {
        this.failedRuns = failedRuns;
        return this;
    }
    
    /**
     * Trend value for the 50th percentile duration for a workflow for a given time window.
     */
    @JsonProperty("median_duration_secs")
    public Float medianDurationSecs;

    public GetWorkflowSummary200ApplicationJSONTrends withMedianDurationSecs(Float medianDurationSecs) {
        this.medianDurationSecs = medianDurationSecs;
        return this;
    }
    
    /**
     * trend for mean time to recovery (mean time between failures and their next success).
     */
    @JsonProperty("mttr")
    public Float mttr;

    public GetWorkflowSummary200ApplicationJSONTrends withMttr(Float mttr) {
        this.mttr = mttr;
        return this;
    }
    
    /**
     * Trend value for the 95th percentile duration for a workflow for a given time window.
     */
    @JsonProperty("p95_duration_secs")
    public Float p95DurationSecs;

    public GetWorkflowSummary200ApplicationJSONTrends withP95DurationSecs(Float p95DurationSecs) {
        this.p95DurationSecs = p95DurationSecs;
        return this;
    }
    
    /**
     * The trend value for the success rate.
     */
    @JsonProperty("success_rate")
    public Float successRate;

    public GetWorkflowSummary200ApplicationJSONTrends withSuccessRate(Float successRate) {
        this.successRate = successRate;
        return this;
    }
    
    /**
     * Trend value for the average number of runs per day.
     */
    @JsonProperty("throughput")
    public Float throughput;

    public GetWorkflowSummary200ApplicationJSONTrends withThroughput(Float throughput) {
        this.throughput = throughput;
        return this;
    }
    
    /**
     * The trend value for total credits consumed.
     */
    @JsonProperty("total_credits_used")
    public Float totalCreditsUsed;

    public GetWorkflowSummary200ApplicationJSONTrends withTotalCreditsUsed(Float totalCreditsUsed) {
        this.totalCreditsUsed = totalCreditsUsed;
        return this;
    }
    
    /**
     * The trend value for total number of runs.
     */
    @JsonProperty("total_runs")
    public Float totalRuns;

    public GetWorkflowSummary200ApplicationJSONTrends withTotalRuns(Float totalRuns) {
        this.totalRuns = totalRuns;
        return this;
    }
    
    public GetWorkflowSummary200ApplicationJSONTrends(@JsonProperty("failed_runs") Float failedRuns, @JsonProperty("median_duration_secs") Float medianDurationSecs, @JsonProperty("mttr") Float mttr, @JsonProperty("p95_duration_secs") Float p95DurationSecs, @JsonProperty("success_rate") Float successRate, @JsonProperty("throughput") Float throughput, @JsonProperty("total_credits_used") Float totalCreditsUsed, @JsonProperty("total_runs") Float totalRuns) {
        this.failedRuns = failedRuns;
        this.medianDurationSecs = medianDurationSecs;
        this.mttr = mttr;
        this.p95DurationSecs = p95DurationSecs;
        this.successRate = successRate;
        this.throughput = throughput;
        this.totalCreditsUsed = totalCreditsUsed;
        this.totalRuns = totalRuns;
  }
}
