/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends - Metric trends aggregated across all workflows and branches for a project.
 */
public class GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends {
    /**
     * The trend value for the success rate.
     */
    @JsonProperty("success_rate")
    public Float successRate;
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends withSuccessRate(Float successRate) {
        this.successRate = successRate;
        return this;
    }
    
    /**
     * Trend value for the average number of runs per day.
     */
    @JsonProperty("throughput")
    public Float throughput;
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends withThroughput(Float throughput) {
        this.throughput = throughput;
        return this;
    }
    
    /**
     * The trend value for total credits consumed.
     */
    @JsonProperty("total_credits_used")
    public Float totalCreditsUsed;
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends withTotalCreditsUsed(Float totalCreditsUsed) {
        this.totalCreditsUsed = totalCreditsUsed;
        return this;
    }
    
    /**
     * Trend value for total duration.
     */
    @JsonProperty("total_duration_secs")
    public Float totalDurationSecs;
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends withTotalDurationSecs(Float totalDurationSecs) {
        this.totalDurationSecs = totalDurationSecs;
        return this;
    }
    
    /**
     * The trend value for total number of runs.
     */
    @JsonProperty("total_runs")
    public Float totalRuns;
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends withTotalRuns(Float totalRuns) {
        this.totalRuns = totalRuns;
        return this;
    }
    
    public GetProjectWorkflowsPageData200ApplicationJSONProjectDataTrends(@JsonProperty("success_rate") Float successRate, @JsonProperty("throughput") Float throughput, @JsonProperty("total_credits_used") Float totalCreditsUsed, @JsonProperty("total_duration_secs") Float totalDurationSecs, @JsonProperty("total_runs") Float totalRuns) {
        this.successRate = successRate;
        this.throughput = throughput;
        this.totalCreditsUsed = totalCreditsUsed;
        this.totalDurationSecs = totalDurationSecs;
        this.totalRuns = totalRuns;
  }
}
