/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetProjectWorkflowsPageData200ApplicationJSON - Aggregated summary metrics and trends by workflow and branches
 */
public class GetProjectWorkflowsPageData200ApplicationJSON {
    /**
     * A list of all the branches for a given project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("all_branches")
    public String[] allBranches;

    public GetProjectWorkflowsPageData200ApplicationJSON withAllBranches(String[] allBranches) {
        this.allBranches = allBranches;
        return this;
    }
    
    /**
     * A list of all the workflows for a given project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("all_workflows")
    public String[] allWorkflows;

    public GetProjectWorkflowsPageData200ApplicationJSON withAllWorkflows(String[] allWorkflows) {
        this.allWorkflows = allWorkflows;
        return this;
    }
    
    /**
     * The unique ID of the organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("org_id")
    public Object orgId;

    public GetProjectWorkflowsPageData200ApplicationJSON withOrgId(Object orgId) {
        this.orgId = orgId;
        return this;
    }
    
    /**
     * Metrics and trends data aggregated for a given project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_data")
    public GetProjectWorkflowsPageData200ApplicationJSONProjectData projectData;

    public GetProjectWorkflowsPageData200ApplicationJSON withProjectData(GetProjectWorkflowsPageData200ApplicationJSONProjectData projectData) {
        this.projectData = projectData;
        return this;
    }
    
    /**
     * The unique ID of the project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_id")
    public Object projectId;

    public GetProjectWorkflowsPageData200ApplicationJSON withProjectId(Object projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * A list of metrics and trends data for branches for a given project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_workflow_branch_data")
    public GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData[] projectWorkflowBranchData;

    public GetProjectWorkflowsPageData200ApplicationJSON withProjectWorkflowBranchData(GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowBranchData[] projectWorkflowBranchData) {
        this.projectWorkflowBranchData = projectWorkflowBranchData;
        return this;
    }
    
    /**
     * A list of metrics and trends data for workflows for a given project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_workflow_data")
    public GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData[] projectWorkflowData;

    public GetProjectWorkflowsPageData200ApplicationJSON withProjectWorkflowData(GetProjectWorkflowsPageData200ApplicationJSONProjectWorkflowData[] projectWorkflowData) {
        this.projectWorkflowData = projectWorkflowData;
        return this;
    }
    
    public GetProjectWorkflowsPageData200ApplicationJSON(){}
}
