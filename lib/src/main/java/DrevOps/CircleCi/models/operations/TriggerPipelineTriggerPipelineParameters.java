/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TriggerPipelineTriggerPipelineParameters - The information you can supply when triggering a pipeline.
 */
public class TriggerPipelineTriggerPipelineParameters {
    /**
     * The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive. To trigger a pipeline for a PR by number use `pull/&lt;number&gt;/head` for the PR ref or `pull/&lt;number&gt;/merge` for the merge ref (GitHub only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branch")
    public String branch;
    public TriggerPipelineTriggerPipelineParameters withBranch(String branch) {
        this.branch = branch;
        return this;
    }
    
    /**
     * An object containing pipeline parameters and their values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, Object> parameters;
    public TriggerPipelineTriggerPipelineParameters withParameters(java.util.Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    public String tag;
    public TriggerPipelineTriggerPipelineParameters withTag(String tag) {
        this.tag = tag;
        return this;
    }
    
    public TriggerPipelineTriggerPipelineParameters(){}
}
