/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts - Test counts for a given pipeline number
 */
public class GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts {
    /**
     * The number of tests with the error status
     */
    @JsonProperty("error")
    public Long error;

    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts withError(Long error) {
        this.error = error;
        return this;
    }
    
    /**
     * The number of tests with the failure status
     */
    @JsonProperty("failure")
    public Long failure;

    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts withFailure(Long failure) {
        this.failure = failure;
        return this;
    }
    
    /**
     * The number of tests with the skipped status
     */
    @JsonProperty("skipped")
    public Long skipped;

    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts withSkipped(Long skipped) {
        this.skipped = skipped;
        return this;
    }
    
    /**
     * The number of tests with the success status
     */
    @JsonProperty("success")
    public Long success;

    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts withSuccess(Long success) {
        this.success = success;
        return this;
    }
    
    /**
     * The total number of tests
     */
    @JsonProperty("total")
    public Long total;

    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public GetProjectWorkflowTestMetrics200ApplicationJSONTestRunsTestCounts(@JsonProperty("error") Long error, @JsonProperty("failure") Long failure, @JsonProperty("skipped") Long skipped, @JsonProperty("success") Long success, @JsonProperty("total") Long total) {
        this.error = error;
        this.failure = failure;
        this.skipped = skipped;
        this.success = success;
        this.total = total;
  }
}
