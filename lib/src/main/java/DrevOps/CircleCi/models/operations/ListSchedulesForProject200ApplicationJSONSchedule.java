/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import DrevOps.CircleCi.utils.DateTimeDeserializer;
import DrevOps.CircleCi.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

/**
 * ListSchedulesForProject200ApplicationJSONSchedule - A schedule response
 */
public class ListSchedulesForProject200ApplicationJSONSchedule {
    /**
     * The attribution actor who will run the scheduled pipeline.
     */
    @JsonProperty("actor")
    public ListSchedulesForProject200ApplicationJSONScheduleUser actor;

    public ListSchedulesForProject200ApplicationJSONSchedule withActor(ListSchedulesForProject200ApplicationJSONScheduleUser actor) {
        this.actor = actor;
        return this;
    }
    
    /**
     * The date and time the pipeline was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created-at")
    public OffsetDateTime createdAt;

    public ListSchedulesForProject200ApplicationJSONSchedule withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Description of the schedule.
     */
    @JsonProperty("description")
    public String description;

    public ListSchedulesForProject200ApplicationJSONSchedule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The unique ID of the schedule.
     */
    @JsonProperty("id")
    public String id;

    public ListSchedulesForProject200ApplicationJSONSchedule withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the schedule.
     */
    @JsonProperty("name")
    public String name;

    public ListSchedulesForProject200ApplicationJSONSchedule withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Pipeline parameters represented as key-value pairs. Must contain branch or tag.
     */
    @JsonProperty("parameters")
    public java.util.Map<String, Object> parameters;

    public ListSchedulesForProject200ApplicationJSONSchedule withParameters(java.util.Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * The project-slug for the schedule
     */
    @JsonProperty("project-slug")
    public String projectSlug;

    public ListSchedulesForProject200ApplicationJSONSchedule withProjectSlug(String projectSlug) {
        this.projectSlug = projectSlug;
        return this;
    }
    
    /**
     * Timetable that specifies when a schedule triggers.
     */
    @JsonProperty("timetable")
    public Object timetable;

    public ListSchedulesForProject200ApplicationJSONSchedule withTimetable(Object timetable) {
        this.timetable = timetable;
        return this;
    }
    
    /**
     * The date and time the pipeline was last updated.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated-at")
    public OffsetDateTime updatedAt;

    public ListSchedulesForProject200ApplicationJSONSchedule withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public ListSchedulesForProject200ApplicationJSONSchedule(@JsonProperty("actor") ListSchedulesForProject200ApplicationJSONScheduleUser actor, @JsonProperty("created-at") OffsetDateTime createdAt, @JsonProperty("description") String description, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("parameters") java.util.Map<String, Object> parameters, @JsonProperty("project-slug") String projectSlug, @JsonProperty("timetable") Object timetable, @JsonProperty("updated-at") OffsetDateTime updatedAt) {
        this.actor = actor;
        this.createdAt = createdAt;
        this.description = description;
        this.id = id;
        this.name = name;
        this.parameters = parameters;
        this.projectSlug = projectSlug;
        this.timetable = timetable;
        this.updatedAt = updatedAt;
  }
}
