/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import DrevOps.CircleCi.utils.SpeakeasyMetadata;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

public class GetProjectWorkflowRunsRequest {
    /**
     * Whether to retrieve data for all branches combined. Use either this parameter OR the branch name parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=all-branches")
    public Boolean allBranches;
    public GetProjectWorkflowRunsRequest withAllBranches(Boolean allBranches) {
        this.allBranches = allBranches;
        return this;
    }
    
    /**
     * The name of a vcs branch. If not passed we will scope the API call to the default branch.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=branch")
    public String branch;
    public GetProjectWorkflowRunsRequest withBranch(String branch) {
        this.branch = branch;
        return this;
    }
    
    /**
     * Include only executions that started before this date. This date can be at most 90 days after the start-date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end-date")
    public OffsetDateTime endDate;
    public GetProjectWorkflowRunsRequest withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * A token to retrieve the next page of results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page-token")
    public String pageToken;
    public GetProjectWorkflowRunsRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=project-slug")
    public String projectSlug;
    public GetProjectWorkflowRunsRequest withProjectSlug(String projectSlug) {
        this.projectSlug = projectSlug;
        return this;
    }
    
    /**
     * Include only executions that started at or after this date. This must be specified if an end-date is provided.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start-date")
    public OffsetDateTime startDate;
    public GetProjectWorkflowRunsRequest withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The name of the workflow.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workflow-name")
    public String workflowName;
    public GetProjectWorkflowRunsRequest withWorkflowName(String workflowName) {
        this.workflowName = workflowName;
        return this;
    }
    
    public GetProjectWorkflowRunsRequest(@JsonProperty("project-slug") String projectSlug, @JsonProperty("workflow-name") String workflowName) {
        this.projectSlug = projectSlug;
        this.workflowName = workflowName;
  }
}
