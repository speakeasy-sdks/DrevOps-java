/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package DrevOps.CircleCi.models.operations;

import DrevOps.CircleCi.utils.DateTimeDeserializer;
import DrevOps.CircleCi.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

/**
 * ListWorkflowJobsWorkflowJobListResponseJob - Job
 */
public class ListWorkflowJobsWorkflowJobListResponseJob {
    /**
     * The unique ID of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval_request_id")
    public String approvalRequestId;

    public ListWorkflowJobsWorkflowJobListResponseJob withApprovalRequestId(String approvalRequestId) {
        this.approvalRequestId = approvalRequestId;
        return this;
    }
    
    /**
     * The unique ID of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approved_by")
    public String approvedBy;

    public ListWorkflowJobsWorkflowJobListResponseJob withApprovedBy(String approvedBy) {
        this.approvedBy = approvedBy;
        return this;
    }
    
    /**
     * The unique ID of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canceled_by")
    public String canceledBy;

    public ListWorkflowJobsWorkflowJobListResponseJob withCanceledBy(String canceledBy) {
        this.canceledBy = canceledBy;
        return this;
    }
    
    /**
     * A sequence of the unique job IDs for the jobs that this job depends upon in the workflow.
     */
    @JsonProperty("dependencies")
    public String[] dependencies;

    public ListWorkflowJobsWorkflowJobListResponseJob withDependencies(String[] dependencies) {
        this.dependencies = dependencies;
        return this;
    }
    
    /**
     * The unique ID of the job.
     */
    @JsonProperty("id")
    public String id;

    public ListWorkflowJobsWorkflowJobListResponseJob withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The number of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job_number")
    public Long jobNumber;

    public ListWorkflowJobsWorkflowJobListResponseJob withJobNumber(Long jobNumber) {
        this.jobNumber = jobNumber;
        return this;
    }
    
    /**
     * The name of the job.
     */
    @JsonProperty("name")
    public String name;

    public ListWorkflowJobsWorkflowJobListResponseJob withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The project-slug for the job.
     */
    @JsonProperty("project_slug")
    public String projectSlug;

    public ListWorkflowJobsWorkflowJobListResponseJob withProjectSlug(String projectSlug) {
        this.projectSlug = projectSlug;
        return this;
    }
    
    /**
     * The date and time the job started.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("started_at")
    public OffsetDateTime startedAt;

    public ListWorkflowJobsWorkflowJobListResponseJob withStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }
    
    /**
     * The current status of the job.
     */
    @JsonProperty("status")
    public ListWorkflowJobsWorkflowJobListResponseJobStatusEnum status;

    public ListWorkflowJobsWorkflowJobListResponseJob withStatus(ListWorkflowJobsWorkflowJobListResponseJobStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The time when the job stopped.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("stopped_at")
    public OffsetDateTime stoppedAt;

    public ListWorkflowJobsWorkflowJobListResponseJob withStoppedAt(OffsetDateTime stoppedAt) {
        this.stoppedAt = stoppedAt;
        return this;
    }
    
    /**
     * The type of job.
     */
    @JsonProperty("type")
    public ListWorkflowJobsWorkflowJobListResponseJobTypeEnum type;

    public ListWorkflowJobsWorkflowJobListResponseJob withType(ListWorkflowJobsWorkflowJobListResponseJobTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public ListWorkflowJobsWorkflowJobListResponseJob(@JsonProperty("dependencies") String[] dependencies, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("project_slug") String projectSlug, @JsonProperty("started_at") OffsetDateTime startedAt, @JsonProperty("status") ListWorkflowJobsWorkflowJobListResponseJobStatusEnum status, @JsonProperty("type") ListWorkflowJobsWorkflowJobListResponseJobTypeEnum type) {
        this.dependencies = dependencies;
        this.id = id;
        this.name = name;
        this.projectSlug = projectSlug;
        this.startedAt = startedAt;
        this.status = status;
        this.type = type;
  }
}
